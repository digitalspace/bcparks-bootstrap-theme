name: Bump Version and Archive

on:
  push:
    branches: [master]

jobs:
  build:
    name: "Build and archive"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --silent --frozen-lockfile
      - name: Build
        run: yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-dist
          path: dist/

  upload-artifact:
    name: "Upload Artifact"
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Get dist
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-dist
      - run: git config --global user.email ${{ secrets.EMAIL }}
      - run: git config --global user.name ${{ secrets.USERNAME }}
      - run: yarn version --newversion --allow-same-version ${{ steps.release.outputs.version }} --tag ${{ steps.release.outputs.tag }}
      - run: yarn pack
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-package
          path: "*.tgz"

  semantic-release:
    name: "Bump version and push tag"
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --silent --frozen-lockfile
      - name: Get dist
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-dist
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Get tag
        run: echo "RELEASE_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
      - name: "Create release"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: true,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
