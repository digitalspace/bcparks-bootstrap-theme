name: Bump Version, Create Pre-Release, Archive

on:
  push:
    branches: [master]

jobs:
  semantics-release:
    name: "Bump version, create pre-release and archive"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      # Setup and build
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --silent --frozen-lockfile
      - name: Build
        run: yarn build

      # Semantics release
      # Update changelog
      # Update package.json
      # Create GH tag
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # Get new release tag
      - name: Get tag
        id: get-tag
        run: echo "RELEASE_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      # Yarn pack and upload .tgz
      - run: yarn pack
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ process.env.RELEASE_TAG }}-package
          path: "*.tgz"

      # Upload Dist
      - name: Upload Dist
        uses: actions/upload-artifact@v3
        with:
          name: ${{ process.env.RELEASE_TAG }}-dist
          path: dist/

      # Create GH Pre-release
      - name: Create Pre-release
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: true,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
