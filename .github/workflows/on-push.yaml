name: Bump Version and Archive

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build and archive
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --prefer-offline
      - name: Build
        run: yarn build

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
        id: diff

    # If index.js was different than expected, upload the expected version as an artifact
    - uses: actions/upload-artifact@v3
      if: ${{ failure() && steps.diff.conclusion == 'failure' }}
      with:
        name: dist
        path: dist/

  upload-artifact:
    name: Upload Artifact
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Get dist
        uses: actions/download-artifact@v3
        with:
          name: dist
      - run: git config --global user.email ${{ secrets.EMAIL }}
      - run: git config --global user.name ${{ secrets.USERNAME }}
      - run: yarn version --newversion --allow-same-version ${{ steps.release.outputs.version }} --tag ${{ steps.release.outputs.tag }}
      - run: yarn pack
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: "*.tgz"

  semantic-release:
    name: Bump version and push tag
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --prefer-offline
      - name: Install semantic-release extra plugins
        run: yarn add --dev @semantic-release/changelog @semantic-release/git
      - name: Get dist
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
